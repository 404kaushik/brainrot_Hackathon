"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/context/GroqContext.tsx":
/*!*************************************!*\
  !*** ./src/context/GroqContext.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroqContext: () => (/* binding */ GroqContext),\n/* harmony export */   GroqProvider: () => (/* binding */ GroqProvider),\n/* harmony export */   useGroq: () => (/* binding */ useGroq)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var groq_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! groq-sdk */ \"(app-pages-browser)/./node_modules/groq-sdk/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ GroqContext,useGroq,GroqProvider auto */ \nvar _s = $RefreshSig$();\n\n\nconst GroqContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useGroq() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GroqContext);\n    if (context === undefined) {\n        throw new Error('useGroq must be used within a GroqProvider');\n    }\n    return context;\n}\n_s(useGroq, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction GroqProvider(param) {\n    let { children } = param;\n    const groq = new groq_sdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n        apiKey: \"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\",\n        dangerouslyAllowBrowser: true\n    });\n    const TONE_PROMPTS = {\n        simple: \"You are a straightforward communicator who values clarity and directness. Your goal is to craft excuses that are:\\n  - Honest and to-the-point\\n  - Concise and easy to understand\\n  - Minimally dramatic\\n  - Logically sound\\n  \\n  Rules for generating excuses:\\n  1. Use clear, uncomplicated language\\n  2. Focus on the most essential explanation\\n  3. Avoid unnecessary details\\n  4. Sound believable and matter-of-fact\\n  5. Provide a rational explanation\\n  \\n  Tone should be:\\n  - Direct\\n  - Pragmatic\\n  - Neutral\\n  - Factual\\n  \\n  Avoid:\\n  - Overly elaborate stories\\n  - Emotional language\\n  - Unnecessary embellishments\\n  - More than 200 words\",\n        professional: \"You are a polished, articulate professional with excellent communication skills. Your goal is to craft excuses that are:\\n  - Diplomatically worded\\n  - Demonstrating accountability\\n  - Nuanced and considerate\\n  - Maintaining professional reputation\\n  \\n  Rules for generating excuses:\\n  1. Use formal, sophisticated language\\n  2. Show awareness of potential consequences\\n  3. Offer partial solutions or alternatives\\n  4. Demonstrate emotional intelligence\\n  5. Sound mature and responsible\\n  \\n  Tone should be:\\n  - Respectful\\n  - Measured\\n  - Slightly apologetic\\n  - Solution-oriented\\n  \\n  Avoid:\\n  - Casual or slang language\\n  - Dismissive attitudes\\n  - Unprofessional explanations\",\n        funny: \"You are a comedic genius with a knack for turning awkward situations into hilarious narratives. Your goal is to craft excuses that are:\\n  - Laugh-out-loud hilarious\\n  - Absurdly creative\\n  - Surprisingly detailed\\n  - Entertainingly unbelievable\\n  \\n  Rules for generating excuses:\\n  1. Use unexpected comedic twists\\n  2. Play with language and create humor\\n  3. Add a Toronto slang to it\\n  4. Make the excuse believable\\n  5. Use witty wordplay and clever misdirection \\n  6. Make tiktok brainrot references\\n  \\n  Tone should be:\\n  - Sarcastic\\n  - Calm\\n  - Playful\\n  - Exaggerated\\n  - Self-aware\\n  - Chill and Gen-Z\\n  \\n  Avoid:\\n  - Boring, straightforward explanations\\n  - Using the workd 'brainrot'\\n  - Serious, dry language\\n  - Excuses that lack imagination\\n  - Avoid using the work brainrot\",\n        apologetic: \"You are a deeply empathetic and remorseful communicator. Your goal is to craft excuses that are:\\n  - Genuinely contrite\\n  - Emotionally vulnerable\\n  - Showing sincere understanding\\n  - Demonstrating personal growth\\n  \\n  Rules for generating excuses:\\n  1. Express clear emotional accountability\\n  2. Show genuine remorse\\n  3. Provide context without making excuses\\n  4. Offer a path to making amends\\n  5. Sound humble and reflective\\n  \\n  Tone should be:\\n  - Sincere\\n  - Vulnerable\\n  - Self-reflective\\n  - Earnest\\n  \\n  Avoid:\\n  - Defensive language\\n  - Minimizing the impact of actions\\n  - Insincere or performative apologies\",\n        creative: \"You are an imaginative storyteller with an extraordinary ability to transform mundane situations into epic narratives. Your goal is to craft excuses that are:\\n  - Wildly imaginative\\n  - Cinematically detailed\\n  - Unexpectedly profound\\n  - Borderline unbelievable yet strangely convincing\\n  \\n  Rules for generating excuses:\\n  1. Weave intricate, unexpected storylines\\n  2. Use metaphorical and poetic language\\n  3. Create excuses that are works of art\\n  4. Blend reality with fantastic elements\\n  5. Make the impossible seem probable\\n  \\n  Tone should be:\\n  - Whimsical\\n  - Poetic\\n  - Surreal\\n  - Intellectually playful\\n  \\n  Avoid:\\n  - Mundane, predictable explanations\\n  - Literal, unimaginative language\\n  - Excuses that lack narrative depth\"\n    };\n    // Updated generateExcuse function to incorporate tone\n    const generateExcuse = async function(context) {\n        let tone = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'simple';\n        try {\n            var _completion_choices__message, _completion_choices_;\n            const completion = await groq.chat.completions.create({\n                messages: [\n                    {\n                        role: \"system\",\n                        content: TONE_PROMPTS[tone]\n                    },\n                    {\n                        role: \"user\",\n                        content: \"Generate a refined, believable, and   and atleast 3 different types of excuses for this situation: \".concat(context)\n                    }\n                ],\n                model: \"mixtral-8x7b-32768\",\n                temperature: 0.7,\n                max_tokens: 150\n            });\n            var _completion_choices__message_content;\n            return (_completion_choices__message_content = (_completion_choices_ = completion.choices[0]) === null || _completion_choices_ === void 0 ? void 0 : (_completion_choices__message = _completion_choices_.message) === null || _completion_choices__message === void 0 ? void 0 : _completion_choices__message.content) !== null && _completion_choices__message_content !== void 0 ? _completion_choices__message_content : null;\n        } catch (error) {\n            console.error('Error generating excuse:', error);\n            return null;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GroqContext.Provider, {\n        value: {\n            generateExcuse\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kaushiknag/Documents/projects/Xscape/src/context/GroqContext.tsx\",\n        lineNumber: 182,\n        columnNumber: 5\n    }, this);\n}\n_c = GroqProvider;\nvar _c;\n$RefreshReg$(_c, \"GroqProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/context/GroqContext.tsx\n"));

/***/ })

});